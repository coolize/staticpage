{"version":3,"sources":["helpers/api.js","components/ImageLoader.js","MainApp.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","auth","username","process","password","withCredentials","ImageLoader","props","handleChange","event","setState","id","target","value","handleSubmit","preventDefault","API","get","then","res","console","log","data","state","onSubmit","this","type","name","onChange","src","Component","MainApp","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAkBeA,E,OAhBAC,EAAMC,OAAO,CAC1BC,QAAQ,8DACRC,KAAM,CACJC,SAAUC,uBACVC,SAAUD,sDAEZE,iBAAiB,ICqCJC,E,kDAtCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAEC,GAAIF,EAAMG,OAAOC,SARlB,EAWnBC,aAAe,SAAAL,GACXA,EAAMM,iBAENC,EAAIC,IAAJ,qBACKC,MAAK,SAAAC,GACNC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,UAfpB,EAAKC,MAAQ,CACTZ,GAAI,IAHO,E,qDAsBf,OACA,gCACE,uBAAMa,SAAUC,KAAKX,aAArB,UACE,+CAEE,uBAAOY,KAAK,OAAOC,KAAK,KAAKC,SAAUH,KAAKjB,kBAE9C,wBAAQkB,KAAK,SAAb,qBAEF,uBACA,qBAAKG,IAAI,4C,GAjCOC,aCKTC,E,uKANX,OACE,cAAC,EAAD,Q,GAHcC,IAAMF,WCSbG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,EAAgBb,QAAQC,O","file":"static/js/main.46ad3f0c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet instance = axios.create({\r\n  baseURL: `https://api.staging01.lyrid.io/x/node/express/latest/entry/`,\r\n  auth: {\r\n    username: process.env.REACT_APP_LYRID_EXECUTE_KEY,\r\n    password: process.env.REACT_APP_LYRID_EXECUTE_SECRET\r\n  },\r\n  withCredentials: true\r\n});\r\n\r\n\r\n/*\r\nlet instance = axios.create({\r\n  baseURL: `http://localhost:3000/`\r\n});\r\n*/\r\n\r\nexport default instance;\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\n\r\nimport API from \"../helpers/api\";\r\n\r\nclass ImageLoader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n          };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ id: event.target.value });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        API.get(`/echo/hello_world`)\r\n            .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n              Person ID:\r\n              <input type=\"text\" name=\"id\" onChange={this.handleChange} />\r\n            </label>\r\n            <button type=\"submit\">Echo</button>\r\n          </form>\r\n          <h2>{}</h2>\r\n          <img src=\"https://i.imgur.com/3a0qwRe.jpeg\"></img>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageLoader;","import React from 'react';\r\nimport ImageLoader from './components/ImageLoader';\r\n\r\nclass MainApp extends React.Component {\r\n    render() {\r\n      return (\r\n        <ImageLoader />\r\n      );\r\n    }\r\n  }\r\n\r\n  export default MainApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './MainApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}